<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.incode.example.application</groupId>
        <artifactId>incode-extended-example-publishmq-externalsystemadapter</artifactId>
        <version>1.15.0-SNAPSHOT</version>
    </parent>

    <artifactId>incode-extended-example-publishmq-externalsystemadapter-wsdlgen</artifactId>
    <name>Incode Platform DomainApp Example: PublishMQ ExtSysAdapter WSDL Codegen</name>

    <properties>
<!--
        <cxf.release.base>${basedir}/../..</cxf.release.base>
-->
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>com.github.odavid.maven.plugins</groupId>
                <artifactId>mixin-maven-plugin</artifactId>
                <version>0.1-alpha-39</version>
                <extensions>true</extensions>
                <configuration>
                    <mixins>
                        <mixin>
                            <groupId>com.danhaywood.mavenmixin</groupId>
                            <artifactId>standard</artifactId>
                        </mixin>
                    </mixins>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>incode-extended-example-publishmq-externalsystemadapter-wsdl</artifactId>
        </dependency>
    </dependencies>

    <profiles>
        <profile>
            <id>wsdl2java</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>

            <build>
                <plugins>
                    <!--
                    adds generated artifacts to be added to the classpath.  The fakeserver and its test client should use/ignore as required
                    - DemoObject, ObjectFactory, Processed, ProcessedResponse used by both server and client
                    - DemoObjectService is, in essence, the soap client; can be used unchanged.
                    - DemoObject_xxx_Server and DemoObjectImpl can be used as the basis for -fakeserver
                    -->
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.7</version>
                        <executions>
                            <execution>
                                <phase>generate-sources</phase>
                                <goals><goal>add-source</goal></goals>
                                <configuration>
                                    <sources>
                                        <source>target/generated/cxf</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.cxf</groupId>
                        <artifactId>cxf-codegen-plugin</artifactId>
                        <version>${cxf-codegen-plugin.version}</version>
                        <executions>
                            <execution>
                                <id>generate-sources</id>
                                <phase>generate-sources</phase>
                                <configuration>
                                    <wsdlOptions>
                                        <wsdlOption>
                                            <wsdl>classpath:org/isisaddons/module/publishmq/externalsystemadapter/wsdl/DemoObject.wsdl</wsdl>
                                            <extraargs>
                                                <extraarg>-impl</extraarg>
                                                <extraarg>-server</extraarg>
                                                <extraarg>-verbose</extraarg>
                                            </extraargs>
                                            <frontEnd>jaxws21</frontEnd>
                                            <faultSerialVersionUID>1</faultSerialVersionUID>
                                            <!--
                                            unused...
                                            <bindingFiles>
                                                <bindingFile>src/main/resources/org/isisaddons/module/publishmq/externalsystemadapter/wsdl/DemoObject-binding.xml</bindingFile>
                                            </bindingFiles>
                                             -->
                                        </wsdlOption>
                                    </wsdlOptions>
                                </configuration>
                                <goals>
                                    <goal>wsdl2java</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>

            <dependencies>

                <dependency>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-frontend-jaxws</artifactId>
                </dependency>
                <dependency>
                    <groupId>org.apache.cxf</groupId>
                    <artifactId>cxf-rt-transports-http</artifactId>
                </dependency>

                <dependency>
                    <groupId>org.apache.cxf.xjc-utils</groupId>
                    <artifactId>cxf-xjc-runtime</artifactId>
                    <!-- causes conflicts with frontend-jaxws, so isolate and don't export to consumers -->
                    <!-- TODO: perhaps better would be to move as a dependency of the wsdl2java plugin ? -->
                    <optional>true</optional>
                </dependency>
            </dependencies>

        </profile>
    </profiles>

</project>
