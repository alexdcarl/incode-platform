package org.incode.example.settings.dom.jdo;

import java.io.Serializable;
import java.util.StringTokenizer;

/**
 * @see shttp://www.datanucleus.org/products/datanucleus/jdo/primary_key.html
 */
public class UserSettingJdoPK implements Serializable
{
    private static final long serialVersionUID = 1L;

    
    public String user;
    public String key;
    
    public UserSettingJdoPK ()
    {
    }

    public String getUser() {
        return user;
    }

    public void setUser(final String user) {
        this.user = user;
    }

    public String getKey() {
        return key;
    }
    public void setKey(final String key) {
        this.key = key;
    }


    /**
     * Constructor accepting same input as generated by toString().
     */
    public UserSettingJdoPK(final String value)
    {
        final StringTokenizer token = new StringTokenizer (value, ";;");
        this.setUser(token.nextToken());   // user
        this.setKey(token.nextToken());    // key
    }

    public boolean equals(final Object obj)
    {
        if (obj == this)
        {
            return true;
        }
        if (!(obj instanceof UserSettingJdoPK))
        {
            return false;
        }
        final UserSettingJdoPK c = (UserSettingJdoPK)obj;

        return getUser().equals(c.getUser()) && getKey().equals(c.getKey());
    }

    public int hashCode ()
    {
        return this.getUser().hashCode() ^ this.getKey().hashCode();
    }

    public String toString ()
    {
        // Give output expected by String constructor
        return this.getUser() + ";;" + this.getKey();
    }

}